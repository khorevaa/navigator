#Область Форма

#Область События

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектБазы = Параметры.ОбъектБазы;
	
	ОпределитьТипОбъекта();
	УстановитьСвойстваЭлементовФормы(ЭтаФорма);
	ОбновитьДанныеXML();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "Навигатор" Тогда
		
		Если ИмяСобытия = "ЗакрытьВсеОкнаРедакторов" Тогда
			
			Попытка
				Закрыть();
			Исключение
				//
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Элементы

&НаКлиенте
Процедура ОбъектБазыПриИзменении(Элемент)
	
	ОпределитьТипОбъекта();
	УстановитьСвойстваЭлементовФормы(ЭтаФорма);
	ОбновитьДанныеXML();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектБазыОчистка(Элемент, СтандартнаяОбработка)
	
	ОпределитьТипОбъекта();
	УстановитьСвойстваЭлементовФормы(ЭтаФорма);
	ОбновитьДанныеXML();
	
КонецПроцедуры

#КонецОбласти

#Область Таблицы

#Область ИмяТаблицы
#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаЗагрузитьДанныеОбъектаXML(Команда)
	
	ОчиститьСообщения();
	
	ЗагрузитьДанныеОбъектаXMLНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьДанныеОбъектаXML(Команда)
	
	ОчиститьСообщения();
	
	ВыгрузитьДанныеОбъектаXMLНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьДанныеXML(Команда)
	
	ОбновитьДанныеXML();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузитьДанныеОбъектаXMLИзРедактора(Команда)
	
	ЗагрузитьДанныеОбъектаXMLИзРедактора();
	
	ОбновитьДанныеXML();
	ОпределитьТипОбъекта();
	УстановитьСвойстваЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьВРедактореОбъекта(Команда)
	
	ПараметрыФормы = Новый Структура("ОбъектБазы", ОбъектБазы);
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "РедакторОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Процедуры

&НаКлиенте
Процедура ЗагрузитьДанныеОбъектаXMLНаКлиенте()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = "Выберите файл";
	
	ДиалогВыбораФайла.Фильтр = "XML файл (*.xml)|*.xml|Zip-архив (*.zip)|*.zip";
	
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ЗагрузитьДанныеОбъектаXMLНаКлиентеПослеЗакрытияДилога", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеОбъектаXMLНаКлиентеПослеЗакрытияДилога(ВыбФайлы, ДпПараметры) Экспорт
	
	#Область Предусловия
	
	Если ВыбФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ИмяФайла = ВыбФайлы[0];
	
	ВыбФайл = Новый Файл(ИмяФайла);
	РасширениеФайла = ВыбФайл.Расширение;
	
	АдресФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла), УникальныйИдентификатор);
	
	ЗагрузитьДанныеОбъектаXML(АдресФайла, РасширениеФайла);
	
	ОбновитьДанныеXML();
	ОпределитьТипОбъекта();
	УстановитьСвойстваЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеОбъектаXMLНаКлиенте()
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектБазы) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = "Укажите имя файла для выгрузки данных объекта";
	
	ПолноеИмяФайла = ПолноеИмяФайлаПоДаннымОбъекта(ОбъектБазы);
	ДиалогВыбораФайла.ПолноеИмяФайла = ПолноеИмяФайла;
	
	Если ВыгружатьДвижения Или ВыгружатьСвязанныеОбъекты Тогда
		ДиалогВыбораФайла.Фильтр = "Zip-архив (*.zip)|*.zip";
	Иначе
		ДиалогВыбораФайла.Фильтр = "XML файл (*.xml)|*.xml";
	КонецЕсли;
	
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ВыгрузитьДанныеОбъектаXMLНаКлиентеПослеЗакрытияДилога", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеОбъектаXMLНаКлиентеПослеЗакрытияДилога(ВыбФайлы, ДпПараметры) Экспорт
	
	#Область Предусловия
	
	Если ВыбФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ИмяФайлаДанных = ВыбФайлы[0];
	
	АдресВХ = Неопределено;
	ВыгрузитьДанныеОбъектаXML(АдресВХ);
	
	Если ЗначениеЗаполнено(АдресВХ) Тогда
		
		ДанныеФайла = ПолучитьИзВременногоХранилища(АдресВХ);
		
		Попытка
			ДанныеФайла.Записать(ИмяФайлаДанных);
			ПоказатьОповещениеПользователя(
				"Выгрузка выполнена", 
				Новый ОписаниеОповещения("ВыгрузитьДанныеОбъектаXMLПриНажатии", ЭтаФорма, Новый Структура("ИмяФайлаДанных", ИмяФайлаДанных)), 
				ИмяФайлаДанных, Элементы.КартинкаИнформация.Картинка, СтатусОповещенияПользователя.Информация
			);
		Исключение
			//
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеОбъектаXMLПриНажатии(ДпПараметры) Экспорт
	
	#Область Предусловия
	
	Если ДпПараметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаДанных = ДпПараметры.ИмяФайлаДанных;
	
	Если Не ЗначениеЗаполнено(ИмяФайлаДанных) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ИмяФайлаДанных = ДпПараметры.ИмяФайлаДанных;
	
	ЗапуститьПриложение(ИмяФайлаДанных);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеОбъектаXMLИзРедактора()
	
	ОбъектБазы = Неопределено;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ДанныеXML);
	
	Попытка
		ДанныеОбъектаБазы = ПрочитатьXML(ЧтениеXML);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Сообщить(ТекстОшибки);
		Возврат;
	КонецПопытки;
	
	ДанныеОбъектаБазы.ОбменДанными.Загрузка = Истина;
	ДанныеОбъектаБазы.Записать();
	
	ОбъектБазы = ДанныеОбъектаБазы.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеОбъектаXML(АдресФайла, РасширениеФайла)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(АдресФайла) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	
	ИмяВрФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
	
	Попытка
		ДанныеФайла.Записать(ИмяВрФайла);
	Исключение
		Возврат;
	КонецПопытки;
	
	//
	
	Если ВРег(РасширениеФайла) = ВРег(".xml") Тогда
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ИмяВрФайла);
		
		ст_XML = ТекстовыйДокумент.ПолучитьТекст();
		
		//
		
		ОбъектБазы = Неопределено;
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(ст_XML);
		
		Попытка
			ДанныеОбъектаБазы = ПрочитатьXML(ЧтениеXML);
		Исключение
			ТекстОшибки = ОписаниеОшибки();
			Сообщить(ТекстОшибки);
			Возврат;
		КонецПопытки;
		
		ДанныеОбъектаБазы.ОбменДанными.Загрузка = Истина;
		ДанныеОбъектаБазы.Записать();
		
		ОбъектБазы = ДанныеОбъектаБазы.Ссылка;
		
	ИначеЕсли ВРег(РасширениеФайла) = ВРег(".zip") Тогда
		
		ИмяВрКаталога = ПолучитьИмяВременногоФайла("");
		СоздатьКаталог(ИмяВрКаталога);
		
		ЧтениеZipФайла = Новый ЧтениеZipФайла(ИмяВрФайла);
		ЧтениеZipФайла.ИзвлечьВсе(ИмяВрКаталога, РежимВосстановленияПутейФайловZIP.Восстанавливать);
		
		ФайлыXML = НайтиФайлы(ИмяВрКаталога, "*.xml");
		
		Для каждого ФайлXML Из ФайлыXML Цикл
			
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.ОткрытьФайл(ФайлXML.ПолноеИмя);
			
			Попытка
				ДанныеОбъектаБазы = ПрочитатьXML(ЧтениеXML);
			Исключение
				ТекстОшибки = ОписаниеОшибки();
				Сообщить(ТекстОшибки);
				Возврат;
			КонецПопытки;
			
			ЧтениеXML.Закрыть();
			
			ДанныеОбъектаБазы.ОбменДанными.Загрузка = Истина;
			ДанныеОбъектаБазы.Записать();
			
			Если СтрНайти(ФайлXML.ПолноеИмя, "$_ОбъектБазы_$") > 0 Тогда
				ОбъектБазы = ДанныеОбъектаБазы.Ссылка;
			КонецЕсли;
			
		КонецЦикла;
		
		УдалитьФайлы(ИмяВрКаталога);
		
	КонецЕсли;
	
	//
	
	УдалитьФайлы(ИмяВрФайла);
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьДанныеОбъектаXML(АдресВХ)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектБазы) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяВрФайлаДанныхОбъекта = ИмяФайлаXMLДляВыгрузкиЭлементаБазы(ОбъектБазы.Ссылка, "$_ОбъектБазы_$");
	
	Если Не ЗначениеЗаполнено(ИмяВрФайлаДанныхОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	//
	
	ОбъектБазыДляЧтения = ОбъектБазы.ПолучитьОбъект();
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяВрФайлаДанныхОбъекта);
	ЗаписатьXML(ЗаписьXML, ОбъектБазыДляЧтения);
	ЗаписьXML.Закрыть();
	
	//
	
	ИмяВрФайлаZip = "";
	
	Если ВыгружатьДвижения Тогда
		
		ИмяВрФайлаZip = ПолучитьИмяВременногоФайла("zip");
		
		ZipФайл = Новый ЗаписьZipФайла(ИмяВрФайлаZip, "", "", МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Оптимальный, МетодШифрованияZIP.Zip20);
		ZipФайл.Добавить(ИмяВрФайлаДанныхОбъекта);
		
		//
		
		ДанныеДвижений = Неопределено;
		ВыгрузитьДвиженияДокумента(ДанныеДвижений);
		
		Если Не (ДанныеДвижений = Неопределено) Тогда
			
			Для каждого ИмяФайлаНабораЗаписей Из ДанныеДвижений Цикл
				ZipФайл.Добавить(ИмяФайлаНабораЗаписей);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//
	
	Если ВыгружатьСвязанныеОбъекты Тогда
		
		Если Не ЗначениеЗаполнено(ИмяВрФайлаZip) Тогда
			
			ИмяВрФайлаZip = ПолучитьИмяВременногоФайла("zip");
			
			ZipФайл = Новый ЗаписьZipФайла(ИмяВрФайлаZip, "", "", МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Оптимальный, МетодШифрованияZIP.Zip20);
			ZipФайл.Добавить(ИмяВрФайлаДанныхОбъекта);
		КонецЕсли;
		
		//
		
		ДанныеСвязанныхОбъектов = Неопределено;
		ВыгрузитьСвязанныеОбъекты(ДанныеСвязанныхОбъектов);
		
		Если Не (ДанныеСвязанныхОбъектов = Неопределено) Тогда
			
			Для каждого ИмяФайлаСвОбъекта Из ДанныеСвязанныхОбъектов Цикл
				ZipФайл.Добавить(ИмяФайлаСвОбъекта);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//
	
	Если ЗначениеЗаполнено(ИмяВрФайлаZip) Тогда
		
		ZipФайл.Записать();
		
		Если Не (ДанныеСвязанныхОбъектов = Неопределено) Тогда
			Для каждого ИмяФайлаСвОбъекта Из ДанныеСвязанныхОбъектов Цикл
				УдалитьФайлы(ИмяФайлаСвОбъекта);
			КонецЦикла;
		КонецЕсли;
		
		Если Не (ДанныеДвижений = Неопределено) Тогда
			Для каждого ИмяФайлаНабораЗаписей Из ДанныеДвижений Цикл
				УдалитьФайлы(ИмяФайлаНабораЗаписей);
			КонецЦикла;
		КонецЕсли;
		
		ДанныеФайла = Новый ДвоичныеДанные(ИмяВрФайлаZip);
		
	Иначе
		ДанныеФайла = Новый ДвоичныеДанные(ИмяВрФайлаДанныхОбъекта);
	КонецЕсли;
	
	//
	
	АдресВХ = "";
	
	Попытка
		АдресВХ = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
	Исключение
		//
	КонецПопытки;
	
	//
	
	УдалитьФайлы(ИмяВрФайлаДанныхОбъекта);
	
	Если ЗначениеЗаполнено(ИмяВрФайлаZip) Тогда
		УдалитьФайлы(ИмяВрФайлаZip);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеXML()
	
	ДанныеXML = "";
	ФрДанныеXML = "";
	
	Если ЗначениеЗаполнено(ОбъектБазы) Тогда
		
		ОбъектБазыДляЧтения = ОбъектБазы.ПолучитьОбъект();
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		ЗаписатьXML(ЗаписьXML, ОбъектБазыДляЧтения);
		
		ДанныеXML = ЗаписьXML.Закрыть();
		
		//
		
		ЭтаОбработка = ЭтаОбработка();
		МакетПреобразованиеXSLT = ЭтаОбработка.ПолучитьМакет("ПреобразованиеXSLT");
		
		ПреобразованиеXSL = Новый ПреобразованиеXSL;
		ПреобразованиеXSL.ЗагрузитьИзСтроки(МакетПреобразованиеXSLT.ПолучитьТекст());
		
		ФрДанныеXML = ПреобразованиеXSL.ПреобразоватьИзСтроки(ДанныеXML);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьТипОбъекта()
	
	ЭтоДокумент = Ложь;
	ЭтоСправочник = Ложь;
	
	//
	
	Если ЗначениеЗаполнено(ОбъектБазы) Тогда
		
		ОбъектБазыМД = ОбъектБазы.Метаданные();
		
		ЭтаОбработка = ЭтаОбработка();
		
		ЭтоДокумент   = ЭтаОбработка.ЭтоДокумент(ОбъектБазыМД);
		ЭтоСправочник = ЭтаОбработка.ЭтоСправочник(ОбъектБазыМД);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, СсылкаНаЭлемент)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(СсылкаНаЭлемент) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		СсылкаНаЭлементМД = СсылкаНаЭлемент.Метаданные();
	Исключение
		Возврат;
	КонецПопытки;
	
	ЭтаОбработка = ЭтаОбработка();
	
	Если ЭтаОбработка.ЭтоПеречисление(СсылкаНаЭлементМД) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	Если Не (СвязанныеОбъекты.Найти(СсылкаНаЭлемент) = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	СвязанныеОбъекты.Добавить(СсылкаНаЭлемент);
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьСвязанныеОбъекты(ДанныеСвязанныхОбъектов)
	
	#Область Предусловия
	
	СвязанныеОбъекты = СвязанныеЭлементыОбъектаБазы();
	
	Если СвязанныеОбъекты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	//
	
	ДанныеСвязанныхОбъектов = Новый Массив;
	
	Для каждого СвСсылка Из СвязанныеОбъекты Цикл
		
		#Область Предусловия
		
		Если Не ЗначениеЗаполнено(СвСсылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяВрФайла = ИмяФайлаXMLДляВыгрузкиЭлементаБазы(СвСсылка);
		
		Если Не ЗначениеЗаполнено(ИмяВрФайла) Тогда
			Продолжить;
		КонецЕсли;
		
		#КонецОбласти
		
		ОбъектБазыДляЧтения = СвСсылка.ПолучитьОбъект();
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ИмяВрФайла);
		ЗаписатьXML(ЗаписьXML, ОбъектБазыДляЧтения);
		ЗаписьXML.Закрыть();
		
		ДанныеСвязанныхОбъектов.Добавить(ИмяВрФайла);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьДвиженияДокумента(ДанныеДвижений)
	
	ДанныеДвижений = Новый Массив;
	
	ДанныеОбъекта = ОбъектБазы.ПолучитьОбъект();
	
	Для каждого НаборЗаписей Из ДанныеОбъекта.Движения Цикл
		
		#Область Предусловия
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяВрФайла = ИмяФайлаXMLДляВыгрузкиБлокаДвижений(НаборЗаписей.Метаданные());
		
		Если Не ЗначениеЗаполнено(ИмяВрФайла) Тогда
			Продолжить;
		КонецЕсли;
		
		#КонецОбласти
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ИмяВрФайла);
		ЗаписатьXML(ЗаписьXML, НаборЗаписей);
		ЗаписьXML.Закрыть();
		
		//
		
		ДанныеДвижений.Добавить(ИмяВрФайла);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементовФормы(Форма)
	
	Форма.Элементы.ВыгружатьДвижения.Видимость = Форма.ЭтоДокумент;
	
КонецПроцедуры

#КонецОбласти

#Область Функции

&НаСервере
Функция ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки)
	
	Результат = ЭтаОбработка().ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЭтаОбработка()
	
	Возврат РеквизитФормыВЗначение("Объект");
	
КонецФункции

&НаСервере
Функция ВсеДанныеXMLОбъекта()
	
	Результат = Тип_ВсеДанныеXMLОбъекта();
	ПустойРезультат = Неопределено;
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектБазы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	ТипИсходногоОбъекта = "";
	
	Если ЭтоДокумент Тогда
		ТипИсходногоОбъекта = "Документ";
	ИначеЕсли ЭтоСправочник Тогда
		ТипИсходногоОбъекта = "Справочник";
	КонецЕсли;
	
	ВсеДанныеXML = Тип_ВсеДанныеXMLОбъекта(ТипИсходногоОбъекта);
	
	//
	
	Результат = ВсеДанныеXML;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СвязанныеЭлементыОбъектаБазы()
	
	Результат = Новый Массив;
	ПустойРезультат = Новый Массив;
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектБазы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	//
	
	СвязанныеОбъекты = Новый Массив;
	
	ОбъектБазыМД = ОбъектБазы.Метаданные();
	
	Для каждого СтРеквизитМД Из ОбъектБазыМД.СтандартныеРеквизиты Цикл
		ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, ОбъектБазы[СтРеквизитМД.Имя]);
	КонецЦикла;
	
	Для каждого РеквизитМД Из ОбъектБазыМД.Реквизиты Цикл
		ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, ОбъектБазы[РеквизитМД.Имя]);
	КонецЦикла;
	
	Для каждого ТабличнаяЧастьМД Из ОбъектБазыМД.ТабличныеЧасти Цикл
		
		Если ОбъектБазы[ТабличнаяЧастьМД.Имя].Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого стр_ТаблЧасть Из ОбъектБазы[ТабличнаяЧастьМД.Имя] Цикл
			
			Для каждого РеквизитТЧМД Из ТабличнаяЧастьМД.Реквизиты Цикл
				ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, стр_ТаблЧасть[РеквизитТЧМД.Имя]);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	//
	
	ЭтаОбработка = ЭтаОбработка();
	
	Если ЭтоДокумент Тогда
		
		ДанныеОбъекта = ОбъектБазы.ПолучитьОбъект();
		
		Для каждого НаборЗаписей Из ДанныеОбъекта.Движения Цикл
			
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НаборЗаписейМД = НаборЗаписей.Метаданные();
			
			ЭтоРегистрБухгалтерии = ЭтаОбработка.ЭтоРегистрБухгалтерии(НаборЗаписейМД);
			ЭтоРегистрНакопления  = ЭтаОбработка.ЭтоРегистрНакопления(НаборЗаписейМД);
			ЭтоРегистрСведений    = ЭтаОбработка.ЭтоРегистрСведений(НаборЗаписейМД);
			
			Для каждого Запись Из НаборЗаписей Цикл
				
				Для каждого ИзмерениеМД Из НаборЗаписейМД.Измерения Цикл
					
					Если ЭтоРегистрБухгалтерии Тогда
						
						Если НаборЗаписейМД.Корреспонденция И Не ИзмерениеМД.Балансовый Тогда
							ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, Запись[ИзмерениеМД.Имя + "Дт"]);
							ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, Запись[ИзмерениеМД.Имя + "Кт"]);
						Иначе
							ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, Запись[ИзмерениеМД.Имя]);
						КонецЕсли;
						
					Иначе
						ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, Запись[ИзмерениеМД.Имя]);
					КонецЕсли;
					
				КонецЦикла;
				
				Для каждого РеквизитМД Из НаборЗаписейМД.Реквизиты Цикл
					ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, Запись[РеквизитМД.Имя]);
				КонецЦикла;
				
				Если ЭтоРегистрСведений Тогда
					
					Для каждого РесурсМД Из НаборЗаписейМД.Ресурсы Цикл
						ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, Запись[РесурсМД.Имя]);
					КонецЦикла;
					
				КонецЕсли;
				
				// Субконто
				
				Если ЭтоРегистрБухгалтерии Тогда
					
					Если НаборЗаписейМД.Корреспонденция Тогда
						
						Для каждого КлючЗначение Из Запись.СубконтоДт Цикл
							ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, КлючЗначение.Значение);
						КонецЦикла;
						
						Для каждого КлючЗначение Из Запись.СубконтоКт Цикл
							ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, КлючЗначение.Значение);
						КонецЦикла;
						
					Иначе
						Для каждого КлючЗначение Из Запись.Субконто Цикл
							ДобавитьСсылкуНаСвязанныйЭлемент(СвязанныеОбъекты, КлючЗначение.Значение);
						КонецЦикла;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//
	
	Результат = СвязанныеОбъекты;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяФайлаXMLДляВыгрузкиБлокаДвижений(НаборЗаписейМД)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если НаборЗаписейМД = Неопределено Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	//
	
	ИмяФайлаДляВыгрузки = "";
	
	СсылкаНаОбъектИД = Строка(ОбъектБазы.УникальныйИдентификатор());
	
	ИмяВрФайла = ПолучитьИмяВременногоФайла("xml");
	Файл = Новый Файл(ИмяВрФайла);
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	
	ЭтаОбработка = ЭтаОбработка();
	ИмяТипа = ЭтаОбработка.ИмяТипаОбъектаМетаданных(НаборЗаписейМД);
	
	ИмяФайлаДляВыгрузки = ЭтаОбработка.ПодставитьПараметрыВСТроку(
		"%1\%2_%3_%4_%5_%6", 
		КаталогВременныхФайлов, 
		ИмяТипа, 
		НаборЗаписейМД.Имя, 
		СсылкаНаОбъектИД,
		Файл.ИмяБезРасширения,
		Файл.Расширение
	);
	
	//
	
	Результат = ИмяФайлаДляВыгрузки;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолноеИмяФайлаПоДаннымОбъекта(СсылкаНаОбъект)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	Попытка
		СсылкаНаОбъектМД = СсылкаНаОбъект.Метаданные();
	Исключение
		Возврат ПустойРезультат;
	КонецПопытки;
	
	#КонецОбласти
	
	ПолноеИмяФайла = "";
	
	ЭтаОбработка = ЭтаОбработка();
	
	ИмяТипа = ЭтаОбработка.ИмяТипаОбъектаМетаданных(СсылкаНаОбъектМД); // "Документ"
	ИмяОбъекта = СсылкаНаОбъектМД.Имя; // "АвансовыйОтчет"
	ВерсияДанных = СсылкаНаОбъект.ВерсияДанных; // "AAAAAAACOCA="
	
	Если ИмяТипа = "Документ" Тогда
		ЗначенияРеквизитов = ЭтаОбработка.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, "Номер, Дата");
		ПолноеИмяФайла = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1_%2_%3_%4_%5", ИмяТипа, ИмяОбъекта, ЗначенияРеквизитов.Номер, Формат(ЗначенияРеквизитов.Дата, "ДФ=dd-MM-yyyy_HH-mm-ss"), ВерсияДанных);
	Иначе
		ЗначенияРеквизитов = Новый Структура("Код", "");
		Попытка
			ЗначенияРеквизитов = ЭтаОбработка.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект, "Код");
		Исключение
			//
		КонецПопытки;
		ПолноеИмяФайла = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1_%2_%3_%4", ИмяТипа, ИмяОбъекта, ЗначенияРеквизитов.Код, ВерсияДанных);
	КонецЕсли;
	
	//
	
	Результат = ПолноеИмяФайла;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяФайлаXMLДляВыгрузкиЭлементаБазы(СсылкаНаОбъект, Определитель = "")
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	Попытка
		СсылкаНаОбъектМД = СсылкаНаОбъект.Метаданные();
	Исключение
		Возврат ПустойРезультат;
	КонецПопытки;
	
	#КонецОбласти
	
	//
	
	ИмяФайлаДляВыгрузки = "";
	
	СсылкаНаОбъектИД = Строка(СсылкаНаОбъект.УникальныйИдентификатор());
	
	ИмяВрФайла = ПолучитьИмяВременногоФайла("xml");
	Файл = Новый Файл(ИмяВрФайла);
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	
	ЭтаОбработка = ЭтаОбработка();
	ИмяТипа = ЭтаОбработка.ИмяТипаОбъектаМетаданных(СсылкаНаОбъектМД);
	
	Если ЗначениеЗаполнено(Определитель) Тогда
		ИмяФайлаДляВыгрузки = ЭтаОбработка.ПодставитьПараметрыВСТроку(
			"%1\%2_%3_%4_%5_%6_%7", 
			КаталогВременныхФайлов, 
			Определитель,
			ИмяТипа, 
			СсылкаНаОбъектМД.Имя, 
			СсылкаНаОбъектИД, 
			Файл.ИмяБезРасширения,
			Файл.Расширение
		);
	Иначе
		ИмяФайлаДляВыгрузки = ЭтаОбработка.ПодставитьПараметрыВСТроку(
			"%1\%2_%3_%4_%5_%6", 
			КаталогВременныхФайлов, 
			ИмяТипа, 
			СсылкаНаОбъектМД.Имя, 
			СсылкаНаОбъектИД, 
			Файл.ИмяБезРасширения,
			Файл.Расширение
		);
	КонецЕсли;
	
	//
	
	Результат = ИмяФайлаДляВыгрузки;
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция Тип_ВсеДанныеXMLОбъекта(ТипИсходногоОбъекта = "")
	
	Результат = Новый Структура;
	Результат.Вставить("Объект", "");
	
	Если ТипИсходногоОбъекта = "Документ" Тогда
		Результат.Вставить("Движения", Новый Массив);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

